/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package interfaz;

import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import poo.clases.Particular;
import poo.clases.Reserva;

/**
 *
 * @author Marcos Barroso
 */
public class PanelReservasPar extends javax.swing.JPanel {
    private final JFrame parent;
    List<Reserva> busquedasAnt = new ArrayList<>();
    private final Particular particular;
    ArrayList<Reserva> reservas;
    
    /**
     * Creates new form of PanelReservasPar
     * @param parent
     * @param p 
     */
    public PanelReservasPar(JFrame parent,Particular p) {
        initComponents();
        this.parent=parent;
        this.particular=p;
        reservas = particular.getReservasCliente();
        mostrarDatos();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCalificar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Inmueble", "Dirección", "Anfitrion", "Teléfono", "Fecha Reserva", "Fecha entrada", "Fecha salida", "Días", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(190);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(140);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(105);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
        }

        jButtonCalificar.setBackground(new java.awt.Color(255, 153, 51));
        jButtonCalificar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonCalificar.setText("Calificar estancia");
        jButtonCalificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1017, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCalificar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButtonCalificar))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCalificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalificarActionPerformed
        try {
            int fila = jTable1.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(this, "No hay inmueble seleccionado.", "Selección de inmueble", JOptionPane.ERROR_MESSAGE);
            } else {
                Reserva reserva = reservas.get(fila);
                AuxReseña v = new AuxReseña(parent,true,reserva);
                v.setVisible(true);
            }
        } catch (IndexOutOfBoundsException ie) {
            JOptionPane.showMessageDialog(this, "El elemento seleccionado está vacío.", "Reseña", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ie) {
            JOptionPane.showMessageDialog(this, "Introduzca un número del 1 al 5", "Reseña", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Reseña", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCalificarActionPerformed
    private void limpiarTabla(List<Reserva> busquedas) {
        try {
            int contador = 0;
            for (Reserva r : busquedas) {
                jTable1.setValueAt(null, contador, 0);
                jTable1.setValueAt(null, contador, 1);
                jTable1.setValueAt(null, contador, 2);
                jTable1.setValueAt(null, contador, 3);
                jTable1.setValueAt(null, contador, 4);
                jTable1.setValueAt(null, contador, 5);
                jTable1.setValueAt(null, contador, 6);
                jTable1.setValueAt(null, contador, 7);
                jTable1.setValueAt(null, contador, 8);
                contador++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void mostrarDatos() {
        try {
            limpiarTabla(busquedasAnt);

            int contador = 0;

            for (Reserva r : reservas) {
                DateTimeFormatter formatoCorto = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                jTable1.setValueAt(r.getInmueble().getTitulo(), contador, 0);
                jTable1.setValueAt(r.getInmueble().getDireccion().toString(), contador, 1);
                jTable1.setValueAt(r.getInmueble().getAnfitrion().getNombre(), contador, 2);
                jTable1.setValueAt(r.getInmueble().getAnfitrion().getTelefono(), contador, 3);
                jTable1.setValueAt(r.getFechaReserva().format(formatoCorto), contador, 4);
                jTable1.setValueAt(r.getFechaEntrada().format(formatoCorto), contador, 5);
                jTable1.setValueAt(r.getFechaSalida().format(formatoCorto), contador, 6);
                jTable1.setValueAt(r.getDias(), contador, 7);
                jTable1.setValueAt(r.getPrecio(), contador, 8);
                contador++;
            }
            busquedasAnt = reservas;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
